# Comparando variâncias {#sec-testevar}

:::{.callout-tip collapse="true"}
## Pacotes, funções e base de dados utilizadas no capítulo

Pacotes:

```{r}
# Instalação
# install.packages("remotes")
# remotes::install_github("romunov/AED")
library(AED)
library(flextable)
library(tidyverse)
library(patchwork)
```
:::

A mesma lógica para testar uma hipótese sobre a média populacional $\mu$ pode ser utilizada para testar uma hipótese sobre a **variância populacional** $\sigma^2$. Veja o exemplo a seguir.

A @tbl-rikz-richness é proviniente de um estudo em que foi analizada a riqueza de espécies da macro-fauna da zona entre-marés em nove praias costa da Holanda. Neste exemplo vamos usar as praias 5 e 8.

```{r}
#| code-fold: true
#| label: tbl-rikz-richness
#| tbl-cap: 'Riqueza da macro-fauna em duas praias da costa Holandesa. Dados completos no arquivo "RIKZ" do pacote "AED".'
data('RIKZ')

S = RIKZ %>% 
  subset(Beach == 5 | Beach == 8) %>% 
  select(Richness, Beach)
S %>% 
  flextable() %>% 
  width(width = 1.5)
```

Podemos nos perguntar se em uma praia a riqueza de espécies **varia** mais que na outra, ou seja, se em uma das praias amostras difere uma das outras em maior grau que na outra praia. Neste caso, estamos interessados em testar as **variâncias**, não as médias. Para testarmos a **homogeneidade de variâncias** entre as praias podemos estabelecer as seguintes hipóteses:

O passo-a-passo para testar a homogeneidade de variâncias é similar ao que vimos no @sec-testehipot.

**1. Estabelcer as hipóteses estatísticas**

$H_0: \sigma^2_5 = \sigma^2_8$

$H_a: \sigma^2_5 \ne \sigma^2_8$

A hipótese nula $H_0$ estabelece aqui que as variâncias populacionais na praia 1 ($\sigma^2_5$) seja igual a variância populacional da praia 2 ($\sigma^2_8$), enquento $H_a$ estabelece que são diferentes.

**2. Definir o nível de significância**

Neste caso podemos estabelecer $\alpha = 0,05$ como de costume.


**3. Definir a estatística do teste**

Existem várias formas possíveis de testar a homogeneidade de variâncias, a mais simples é o teste de **razão de variâncias** que tem como estatística:

$$F = \frac{s^2_{maior}}{s^2_{menor}}$$

em que $s^2_{maior}$ é a maior variância amostral e $s^2_{menor}$ é a menor variância amostral.

**4. Calcular a estatística do teste $F_{calc}$**

```{r}
#| code-fold: true
S_var = S %>% 
  group_by(Beach) %>% 
  summarise(Variancias = var(Richness),
            n = n())
smax = max(S_var[,2])
smin = min(S_var[,2])
n1 = as.numeric(S_var[1,3])
n2 = as.numeric(S_var[2,3])

Fcalc = smax/smin
p = pf(Fcalc, df1 = n1-1, df2 = n2-1, lower.tail = FALSE)

```

Neste exemplo, as variâncias amostrais são:

Praia 5: $s^2_{1} = `r S_var[1,2]`$ e,

Praia 8: $s^2_{2} = `r S_var[2,2]`$

O $F_{calc}$ fica:

$$F_{calc} = \frac{`r round(smax,2)`}{`r round(smin,2)`} = `r round(Fcalc,2)`$$
mostrando de a variância na praia `r S_var[which.max(as.matrix(S_var[,2])),1]` é $`r round(Fcalc,2)`$ vezes maior que na praia `r S_var[which.min(as.matrix(S_var[,2])),1]`.


**5. Calcular o valor de p para a distribuição estatística apropriada**

No teste de hipótese para uma média (@sec-testehipot) a distribuição estatística apropriada para a estatística $Z$ era a distribuiução normal padronizada. No caso do teste de razão de variâncias, a distribuição apropriada é chamada de **ditribuição $F$**, que tem um formato assimétrico à direita. Em nosso exemplo, o valor de $p = `r round(p, 3)`$.

```{r}
#| echo: false
#| fig-width: 8
#| fig-height: 6
#| label: fig-F-dist
#| fig-cap: 'Distribuição F de Fisher para 4 graus de liberdade no numerador e 4 graus de liberdade no denominador.'
x = seq(0, 12, by = 0.01)
DF = data.frame(x = x, y = df(x, df1 = (n2-1), df2 = (n1-1)))
ggplot(DF) +
  aes(x = x, y = y) +
  geom_line() +
  geom_area(stat = "function", fun = df,
             args = list(df1 = (n2-1), df2 = (n1-1)),
             fill = "#00998a", 
             xlim = c(Fcalc, 13)) +
   annotate(geom = 'text', x = Fcalc-1, y = 0.1, 
           label = paste("~F[calculado]==", Fcalc, sep = ' '), 
           parse = TRUE, hjust=0, size = 5) +
  annotate(geom = 'segment', x = Fcalc, y = 0.08, xend = Fcalc, yend = 0.01, 
           arrow = arrow(length = unit(2, "mm")), color = "#00998a") +
  annotate(geom = 'text', x = Fcalc+0.5, y = 0.05, 
           label = paste("~p ==", round(p,3), sep = ' '), 
           parse = TRUE, hjust=0, size = 5) +
  labs(y = 'Função de densidade F', x = 'X') +
  theme_classic(base_size = 15)
```

O formato da distribuição F varia em função dos **graus de liberdade** do numerador e do denominador. Iremos falar mais sobre graus de liberdade no @sec-testet. Para este exemplo, os graus de liberdade do numerador e denominador são calculados como $gl = n-1$. Como foram tomadas 5 amostras em cada uma das praias, $gl_{numerador} = gl_{denominador} = n-1 = 4$.

**Tomada de decisão sobre $H_0$**

Assumindo que o valor de $p = `r round(p,3)`$ é menor que o nível de significância adotado $\alpha = 0,05$, **rejeitamos** $H_0$ e concluímos que a distribuição da riqueza de espécies na praia `r S_var[which.max(as.matrix(S_var[,2])),1]` é mais heterogênea que na praia `r S_var[which.min(as.matrix(S_var[,2])),1]`.

## Teste de razão de variâncias no R

Os cálculos acima podem ser replicados no R com o comando `var.test()`.

```{r}
var.test(Richness ~ Beach, data = S, alternative = 'greater')
```


:::{.callout-note}

# Distribuição $F$ para outros graus de liberdade

```{r}
#| echo: false
#| fig-width: 8
#| fig-height: 6
#| label: fig-F-dist-multi
#| fig-cap: 'Distribuição F de Fisher para diferentes combinações de graus de liberdade no numerador e denominador.'
x = seq(0, 5, by = 0.01)
glnum = c(3,10,30)
glden = c(3,10)
DF = data.frame(x = x, 
                y1 = df(x, df1 = glnum[1], df2 = glden[1]),
                y2 = df(x, df1 = glnum[2], df2 = glden[1]),
                y3 = df(x, df1 = glnum[3], df2 = glden[1]),
                y4 = df(x, df1 = glnum[3], df2 = glden[2]))
g1 = ggplot(DF) +
  aes(x = x, y = y1) +
  geom_line() +
  annotate(geom = 'text', x = 2, y = 0.5, 
           label = paste("~gl[numerador]==", glnum[1], sep = ' '), parse = TRUE, hjust=0) +
  annotate(geom = 'text', x = 2, y = 0.4, 
           label = paste("~gl[denominador]==", glden[1], sep = ' '), parse = TRUE, hjust=0) +
  labs(y = 'Função de densidade F', x = 'X') +
  theme_classic(base_size = 15)

g2 = ggplot(DF) +
  aes(x = x, y = y2) +
  geom_line() +
  annotate(geom = 'text', x = 2, y = 0.5, 
           label = paste("~gl[numerador]==", glnum[2], sep = ' '), parse = TRUE, hjust=0) +
  annotate(geom = 'text', x = 2, y = 0.4, 
           label = paste("~gl[denominador]==", glden[1], sep = ' '), parse = TRUE, hjust=0) +
  labs(y = 'Função de densidade F', x = 'X') +
  theme_classic(base_size = 15)

g3 = ggplot(DF) +
  aes(x = x, y = y3) +
  geom_line() +
  annotate(geom = 'text', x = 2, y = 0.5, 
           label = paste("~gl[numerador]==", glnum[3], sep = ' '), parse = TRUE, hjust=0) +
  annotate(geom = 'text', x = 2, y = 0.4, 
           label = paste("~gl[denominador]==", glden[1], sep = ' '), parse = TRUE, hjust=0) +
  labs(y = 'Função de densidade F', x = 'X') +
  theme_classic(base_size = 15)

g4 = ggplot(DF) +
  aes(x = x, y = y4) +
  geom_line() +
  annotate(geom = 'text', x = 2, y = 0.5, 
           label = paste("~gl[numerador]==", glnum[3], sep = ' '), parse = TRUE, hjust=0) +
  annotate(geom = 'text', x = 2, y = 0.4, 
           label = paste("~gl[denominador]==", glden[2], sep = ' '), parse = TRUE, hjust=0) +
  labs(y = 'Função de densidade F', x = 'X') +
  theme_classic(base_size = 15)

(g1 + g2) / (g3 + g4)
```


:::

